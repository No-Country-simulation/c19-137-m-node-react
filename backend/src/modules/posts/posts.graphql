"""
Representa un artículo o publicación en el sistema.
"""
type Post {
    """
    El identificador único de la publicación.
    """
    id: ID!

    """
    Usuario que hizo el post
    """
    user: User!

    """
    El título de la publicación.
    """
    title: String

    """
    El contenido de la publicación.
    """
    content: String

    """
    La fecha y hora de creación de la publicación.
    """
    createdAt: Date

    """
    Comentarios de la publicación.
    """
    comments: [Comment]

    """
    Archivos multimedia adjuntos a la publicación.
    """
    media: [Media]
}


extend type Query {
    """
    Devuelve una lista de todas las publicaciones.
    """
    posts: [Post]!

    """
    Devuelve una publicación específica basada en su ID.
    """
    post(id: ID!): Post
}


extend type Mutation {
    """
    Crea una nueva publicación con los datos proporcionados.

    A traves de esta mutación se puede crear un Post, si el campo no permite valores nulos,
    el sistema devuelve un codigo de estado 400 en la respuesta.
    """
    createPost(
        """
        Los datos necesarios para crear una nueva publicación.
        """
        data: CreatePostInput
    ): CreatePostResponse
}

"""
Input para crear un nuevo post
"""
input CreatePostInput {
    """
    Titulo del post
    """
    title: String!

    """
    Contenido del post
    """
    content: String!

    """
    Archivos multimedia adjuntos a la publicación.

    Se debe subir los archivos multimedia antes de crear el post y pasar los IDs de los archivos multimedia.
    """
    mediaIds: [ID!]
}


"""
Respuesta de registro de post
"""
type CreatePostResponse {
    "Similar al HTTP status code, representa el estado de la operación."
    code: Int!

    "Indica si la operación fue exitosa."
    success: Boolean!

    "Mensaje legible para Humanos, describe el resultado de la operación para la UI"
    message: String!

    "Objeto de usuario recién registrado"
    post: Post
}


extend type Subscription {
    """
    Se suscribe a las nuevas publicaciones creadas.
    """
    onPostChanged(userIds: [ID!]!): Post!

    """
    Se suscribe a cualquier evento
    """
    onSSEvent: Post!

}

